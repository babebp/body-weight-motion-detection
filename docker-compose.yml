version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - airflow_net

  airflow-init:
    image: apache/airflow:2.7.0
    entrypoint: airflow db init
    environment:
      AIRFLOW__CORE__LOAD_EXAMPLES: 'false'
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow_db
    networks:
      - airflow_net
    depends_on:
      - postgres

  airflow-webserver:
    image: apache/airflow:2.7.0
    depends_on:
      - postgres
      - airflow-init
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow_db
      AIRFLOW__WEBSERVER__WORKERS: 2
      AIRFLOW__WEBSERVER__EXPOSE_CONFIG: 'true'
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs  # Add this line for logs
    networks:
      - airflow_net
    ports:
      - "8080:8080"
    command: airflow webserver

  airflow-scheduler:
    image: apache/airflow:2.7.0
    depends_on:
      - airflow-webserver
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow_db
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs  # Add this line for logs
    networks:
      - airflow_net
    command: airflow scheduler

volumes:
  postgres_data:
  logs:  # Define the logs volume here

networks:
  airflow_net:
    driver: bridge
